
http { 
    server {
    listen 8080;

    location / {
        root /data/www;
    }
  }
}

# Configuration Parsing System:
# 1. lexer -> reads raw configuration text and breaks it into tokens (words, symbols, etc.).
# 2. parser -> takes those tokens and builds a structured
# 3. ServerConfig –> the resulting object that our server code will use to access config values.

# 1. lexer:
    # store the token in vector of struct
    # Output: a flat list of tokens you can iterate over.
# 2. parser:
    # parent class: Config:
        # This covers directives that may appear before/inside blocks
    # child class: ServerConfig:
        # Inherits from BaseConfig.
        # Adds server-specific attributes (listen, server_name, etc.).
        # Contains a collection of LocationConfig objects.
    # child class: LocationConfig:
        # Inherits from BaseConfig.
        # Adds location-specific attributes (path, allowed_methods, etc.).


    # Config
    # └── ServerConfig
    #     ├── listen: 8080
    #     ├── server_name: localhost
    #     ├── root: ./www
    #     └── LocationConfig (/images)
    #             ├── root: ./www/images
    #             └── allowed_methods: GET


        